/*! person 21-04-2015 */
function onNotificationGcm(a) {
    switch (console.log("onNotificationGcm: " + JSON.stringify(a)), $("#app-status-ul").append("<li>EVENT -> RECEIVED:" + a.event + "</li>"), 
    a.event) {
      case "registered":
        a.regid.length > 0 && ($("#app-status-ul").append("<li>REGISTERED -> REGID:" + a.regid + "</li>"), 
        console.log("regID = " + a.regid));
        break;

      case "message":
        a.foreground ? ($("#app-status-ul").append("<li>--INLINE NOTIFICATION--</li>"), 
        alert("Ultimate + GO + Push Notifications == AWESOME" + a.payload.message)) : $("#app-status-ul").append(a.coldstart ? "<li>--COLDSTART NOTIFICATION--</li>" : "<li>--BACKGROUND NOTIFICATION--</li>"), 
        $("#app-status-ul").append("<li>MESSAGE -> MSG: " + a.payload.message + "</li>"), 
        $("#app-status-ul").append("<li>MESSAGE -> MSGCNT: " + a.payload.msgcnt + "</li>");
        break;

      case "error":
        $("#app-status-ul").append("<li>ERROR -> MSG:" + a.msg + "</li>");
        break;

      default:
        $("#app-status-ul").append("<li>EVENT -> Unknown, an event was received and we do not know what it is</li>");
    }
}

var App = Ember.Application.create({});

App.basepath = "js/modules/", App.templates = [ {
    name: "components/form-input",
    path: App.basepath + "components.hbs"
}, {
    name: "components/search-bar",
    path: App.basepath + "components/search.hbs"
}, {
    name: "application",
    path: App.basepath + "application.hbs"
}, {
    name: "persons",
    path: App.basepath + "signin/signin.hbs"
}, {
    name: "profile",
    path: App.basepath + "presence/presence.hbs"
}, {
    name: "tenant",
    path: App.basepath + "tenant/tenant.hbs"
}, {
    name: "tenants/create",
    path: App.basepath + "tenant/create.hbs"
}, {
    name: "tenants/index",
    path: App.basepath + "tenant/tenants.hbs"
} ], App.getBrowserLocale = function() {
    return window.navigator.userLanguage || window.navigator.language;
}, App.setDefaultLocale = function() {
    Ember.I18n.locale = App.getBrowserLocale() || "en-US";
}, App.overrideLocaleIfTesting = function() {}, App.initializer({
    name: "compileTemplates",
    before: "localization",
    initialize: function(a, b) {
        b.deferReadiness();
        for (var c = 0; c < App.templates.length; c++) App.compileTemplate(App.templates[c]);
        b.advanceReadiness();
    }
}), App.initializer({
    name: "phonegap",
    after: "compileTemplates",
    initialize: function(a, b) {
        b.deferReadiness(), alert("phonegap initialize"), document.addEventListener("deviceready", this.onDeviceReady, !1), 
        b.advanceReadiness();
    }
}), App.onDeviceReady = function() {
    App.receivedEvent();
    var a = window.plugins.pushNotification;
    alert("push " + a), console.log("test log" + a);
    new PushNotifications(a);
}, App.receivedEvent = function() {
    alert("event received"), console.log("Received Event: ");
}, App.initializer({
    name: "localization",
    initialize: function(a, b) {
        b.deferReadiness(), App.setDefaultLocale(), App.overrideLocaleIfTesting(), App.initializeLocalization(Ember.I18n.locale, b), 
        App.enableLogging();
    }
}), App.apiHost = "http://10.50.52.72:3001", App.session_token = null, App.defaultHeaders = function() {
    return {
        Accept: "application/json",
        Authorization: Ember.get("App.session_token") || "Bearer None"
    };
}, App.ApplicationAdapter = DS.RESTAdapter.extend({
    namespace: "api",
    host: App.apiHost,
    headers: function() {
        return App.defaultHeaders();
    }.property("App.session_token")
}), App.PersonAdapter = DS.RESTAdapter.extend({
    namespace: "u",
    host: App.apiHost,
    headers: function() {
        return App.defaultHeaders();
    }.property("App.session_token")
}), App.store = DS.Store.extend({
    adapter: App.ApplicationAdapter
}), App.compileTemplate = function(a) {
    return App.getTemplate(a, App.loadTemplate);
}, App.loadTemplate = function(a, b) {
    Ember.TEMPLATES[a] = Ember.Handlebars.compile(b);
}, App.getTemplate = function(a, b) {
    return $.ajax({
        url: a.path,
        type: "GET",
        success: function(c) {
            b(a.name, c);
        }
    });
}, App.advanceReadinessIfNotTesting = function(a, b) {
    b !== !0 && a.advanceReadiness();
}, App.initializeLocalization = function(a, b, c) {
    var d = Ember.$.Deferred();
    return Ember.$.getJSON("./js/modules/translations/" + a.toLowerCase() + ".json").done(function(a) {
        Ember.I18n.translations = a, d.resolve(a), App.advanceReadinessIfNotTesting(b, c);
    }).fail(function(a) {
        console.log(a), Ember.$.getJSON("./js/modules/translations/en-us.json", function(a) {
            Ember.I18n.translations = a, d.resolve(a), App.advanceReadinessIfNotTesting(b, c);
        });
    }), d.promise();
}, App.post = function(a) {
    if (void 0 === a || null === a) throw new Error("Request is null or undefined");
    if (void 0 === a.get("endpointRoute") || null === a.get("endpointRoute")) throw new Error("Request missing endpoint route");
    Ember.$.ajaxSetup({
        headers: App.defaultHeaders()
    });
    var b = Ember.$.post(App.apiHost + a.get("endpointRoute"), a.get("data"));
    return b;
}, App.defaultSetSessionToken = function(a) {
    App.set("session_token", a);
}, App.setSessionToken = App.defaultSetSessionToken, App.trimString = function(a) {
    return void 0 === a || null === a ? void 0 : a.trim();
}, App.enableLogging = function() {}, App.returnSafeMailToHref = function(a) {
    return new Ember.Handlebars.SafeString('href="mailTo:' + a + '"');
}, App.returnSafeTelHref = function(a) {
    return new Ember.Handlebars.SafeString('href="tel:' + a + '"');
}, Ember.Handlebars.registerBoundHelper("linkToMail", App.returnSafeMailToHref), 
Ember.Handlebars.registerBoundHelper("linkToTel", App.returnSafeTelHref), App.ValidationMessageComponent = Ember.Component.extend({
    classNames: [ "row" ],
    classNameBindings: [ "isDisplayXS:visible-xs:hidden-xs", "isDisplayXS:epic_validation-message-row" ],
    isDisplayXS: !0,
    actions: {
        resetmsg: function() {
            this.set("message", "");
        }
    }
}), App.PostRequest = Ember.Object.extend({
    endpointRoute: null,
    data: null
});

var PushNotifications = function() {
    function a(a) {
        this.pushNotification = a, this.setup();
    }
    return a.prototype.setup = function() {
        "android" == device.platform || "Android" == device.platform ? (console.log(device), 
        this.pushNotification.register(this.successHandler, this.errorHandler, {
            senderID: "750800674534",
            ecb: "onNotificationGcm"
        })) : this.pushNotification.register(this.tokenHandler, this.errorHandler, {
            badge: "true",
            sound: "true",
            alert: "true",
            ecb: "onNotificationApn"
        });
    }, a.prototype.successHandler = function(a) {
        console.log(a), alert("result = " + a);
    }, a.prototype.errorHandler = function(a) {
        alert("error = " + a);
    }, a.prototype.tokenHandler = function(a) {
        alert("device token = " + a);
    }, a.prototype.onNotificationApn = function(a) {
        if (a.alert && navigator.notification.alert(a.alert), a.sound) {
            var b = new Media(a.sound);
            b.play();
        }
        a.badge && this.pushNotification.setApplicationIconBadgeNumber(this.successHandler, this.errorHandler, a.badge);
    }, a;
}();

App.Router.map(function() {
    this.route("employees"), this.route("managers"), this.route("manadmins"), this.route("empadmins"), 
    this.resource("tenants", function() {
        this.route("enabled"), this.route("disabled"), this.route("create");
    }), this.resource("tenant", {
        path: "tenants/:tenant_id"
    }), this.resource("profile", {
        path: "presences/:presence_id"
    }), this.route("catchAll", {
        path: "*:"
    });
}), App.CatchAllRoute = Ember.Route.extend({
    redirect: function() {
        this.transitionTo("employees");
    }
}), App.IndexRoute = Ember.Route.extend({
    model: function() {
        return this.transitionTo("employees");
    }
}), App.ApplicationRoute = Ember.Route.extend({
    actions: {
        logout: function() {
            this._logout();
        }
    },
    _logout: function() {
        App.setSessionToken(null), localStorage.removeItem("token"), this.transitionTo("employees");
    }
}), App.ApplicationController = Ember.Controller.extend({
    SessionToken: function() {
        return App.get("session_token");
    }.property("App.session_token"),
    NavbarLoggedClass: function() {
        var a = "navbar navbar-ultipro navbar-fixed-top";
        return App.session_token && (a += " xs-no-background"), a;
    }.property("App.session_token"),
    Presence: function() {
        return App.get("presence");
    }.property("App.presence"),
    currentPathChanged: function() {
        window.scrollTo(0, 0);
    }.observes("currentPath"),
    actions: {
        searchClear: function() {
            alert("From AppController!");
        }
    }
});