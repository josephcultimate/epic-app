/*! person 30-03-2015 */
App.LoginController = Ember.Controller.extend({
    _setSessionToken: function(a) {
        App.setSessionToken(a), this.set("token", a);
    },
    _reset: function() {
        this.login && this.login.set("username", null), this.set("errorMessage", null);
    },
    _login: function() {
        var a = this;
        a.set("errorMessage", null), a.login.set("username", App.trimString(a.login.get("username"))), 
        a.login.validate().then(function() {
            var b = App.PostRequest.create({
                endpointRoute: "/login",
                data: JSON.stringify(a.login.getProperties("username"))
            }), c = App.post(b);
            c.then(a.onLoginSuccess(), a.onLoginError());
        }, function() {
            a.set("errorMessage", a.login.get("errors.username"));
        });
    },
    onLoginSuccess: function() {
        var a = this;
        return function(b) {
            a._setSessionToken(b.session_token);
            var c = a.get("attemptedTransition");
            c ? (c.retry(), a.set("attemptedTransition", null)) : a.transitionToRoute("index");
        };
    },
    onLoginError: function() {
        var a = this;
        return function(b) {
            a.set("errorMessage", b.responseJSON.error.message);
        };
    },
    token: localStorage.token,
    tokenChanged: function() {
        localStorage.token = this.get("token");
    }.observes("token"),
    actions: {
        submit: function() {
            this._login();
        },
        reset: function() {
            this._reset();
        }
    }
}), App.Login = Ember.Object.extend(Ember.Validations.Mixin, {
    username: null
}), App.Login.reopen({
    validations: {
        username: {
            presence: {
                message: "Username is required"
            },
            length: {
                minimum: 4
            }
        }
    }
}), App.AuthenticatedRoute = Ember.Route.extend({
    beforeModel: function(a) {
        App.get("session_token") || this.redirectToLogin(a);
    },
    redirectToLogin: function(a) {
        var b = this.controllerFor("login");
        b.set("attemptedTransition", a), this.transitionTo("login");
    },
    actions: {
        error: function(a, b) {
            401 === a.status && this.redirectToLogin(b);
        }
    }
}), App.LoginRoute = Ember.Route.extend({
    model: function() {
        return App.Login.create();
    },
    setupController: function(a, b) {
        a.set("login", b), a.send("reset");
    }
});