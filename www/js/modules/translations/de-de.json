{
	"errors": {
		"accepted": "(de-de)must be accepted",
		"blank": "(de-de)can't be blank",
		"confirmation": "(de-de)doesn't match {{attribute}}",
		"empty": "(de-de)can't be empty",
		"equalTo": "(de-de)must be equal to {{count}}",
		"even": "(de-de)must be even",
		"exclusion": "(de-de)is reserved",
		"greaterThan": "(de-de)must be greater than {{count}}",
		"greaterThanOrEqualTo": "(de-de)must be greater than or equal to {{count}}",
		"inclusion": "(de-de)is not included in the list",
		"invalid": "(de-de)is invalid",
		"lessThan": "(de-de)must be less than {{count}}",
		"lessThanOrEqualTo": "(de-de)must be less than or equal to {{count}}",
		"notANumber": "(de-de)is not a number",
		"notAnInteger": "(de-de)must be an integer",
		"odd": "(de-de)must be odd",
		"otherThan": "(de-de)must be other than {{count}}",
		"present": "(de-de)must be blank",
		"tooLong": "(de-de)is too long (maximum is {{count}} characters)",
		"tooShort": "(de-de)is too short (minimum is {{count}} characters)",
		"wrongLength": "(de-de)is the wrong length (should be {{count}} characters)"
	},
	"system": {
		"literal.MinorIn": "(de-de)Minor in",
		"literal.Present": "(de-de)Present",
		"literal.To": "(de-de)To",
		"literal.achieved": "(de-de)Date of Achievement",
		"literal.expire": "(de-de)Expiration",
		"logout.title": "(de-de)Sign Out",
		"monthname.1": "(de-de)January",
		"monthname.10": "(de-de)October",
		"monthname.11": "(de-de)November",
		"monthname.12": "(de-de)December",
		"monthname.2": "(de-de)February",
		"monthname.3": "(de-de)March",
		"monthname.4": "(de-de)April",
		"monthname.5": "(de-de)May",
		"monthname.6": "(de-de)June",
		"monthname.7": "(de-de)July",
		"monthname.8": "(de-de)August",
		"monthname.9": "(de-de)September",
		"presence.about": "(de-de)About",
		"presence.about.missing": "(de-de)Come back later to know more about me.",
		"presence.aboutyou": "(de-de)About You",
		"presence.certification": "(de-de)Licenses and Certifications",
		"presence.certification.missing": "(de-de)Come back later to see my licenses and certifications.",
		"presence.education": "(de-de)Education",
		"presence.education.missing": "(de-de)Come back later to see my education.",
		"presence.experience": "(de-de)Work Experience",
		"presence.experience.missing": "(de-de)Come back later to see my experience.",
		"presence.hobbies": "(de-de)Hobbies",
		"presence.hobbies.missing": "(de-de)Come back later to see my hobbies.",
		"presence.menu": "(de-de)Presence",
		"presence.skill": "(de-de)Skills",
		"presence.skill.legend": "(de-de)I can help",
		"presence.skill.missing": "(de-de)Come back later to see my skills.",
		"presence.title": "(de-de)Your Presence",
		"search.placeholder": "(de-de)Search",
		"search.placeholder.expanded": "(de-de)Search people by name, skills, location",
		"signin.administrators": "(de-de)Administrators",
		"signin.employeeadmins": "(de-de)Employee/Admins",
		"signin.employees": "(de-de)Employees",
		"signin.manageradmins": "(de-de)Manager/Admins",
		"signin.managers": "(de-de)Managers",
		"signin.noUsers": "(de-de)No users found",
		"signin.title": "(de-de)Select a user to sign in"
	},
	"warnings": {
		"education.import.insufficientFields": "(de-de)Insufficient fields.  Skipping import of this record",
		"education.import.invalidPersonId": "(de-de)An error occurred while trying to find person with id %s. Skipping import of this record",
		"education.import.invalidSchool": "(de-de)Invalid school provided. %s Skipping import of this record.",
		"education.import.maxEducationRecordsMet": "(de-de)Person %s already contains the maximum # of education records (%d). Cannot import education record (SCHOOL: %s, LEVEL: %s, MAJOR: %s, MINOR: %s)",
		"education.import.noPersonIdFound": "(de-de)Person id cannot be empty.  Skipping import of this record",
		"experience.add.unableToAdd": "(de-de)Unable to add an experience record for person id %s",
		"experience.import.insufficientFields": "(de-de)Insufficient fields.  Skipping import of this record",
		"experience.import.invalidCSV": "(de-de)Invalid data provided: %s",
		"experience.import.invalidCompany": "(de-de)Invalid company name provided. %s Skipping import of this record.",
		"experience.import.maxExperienceRecordsMet": "(de-de)Person %s already contains the maximum # of experience records (%d). Cannot import experience record (COMPANY: %s, JOB TITLE: %s)",
		"experience.import.noPersonIdFound": "(de-de)Person id not provided.  Skipping import of this record",
		"experience.import.personIdNotValid": "(de-de)Person id is not valid.  Skipping import of this record",
		"experience.import.personNotFound": "(de-de)An error occurred while trying to find person with id %s. Skipping import of this record",
		"experience.import.unableToUpdateDescription": "(de-de)Unable to update description (%s)",
		"experience.import.unableToUpdateLocation": "(de-de)Unable to update location (%s)",
		"experience.update.noLocation": "(de-de)No location provided.",
		"experience.validate.companyNameIsRequired": "(de-de)Company name is required. Skipping import of this record.",
		"experience.validate.invalidJobTitle": "(de-de)Invalid job title provided. %s Skipping import of this record.",
		"experience.validate.invalidPersonId": "(de-de)Invalid person id (%s) Skipping import of this record.",
		"experience.validate.jobTitleIsRequired": "(de-de)Job title is required. Skipping import of this record.",
		"experience.validate.personIdIsRequired": "(de-de)Person id cannot be empty.  Skipping import of this record",
		"experience.validation.dateRangeNotChronological": "(de-de)From date (%d/%d) must come before To date (%d/%d)",
		"experience.validation.unableToUpdateDuration": "(de-de)Unable to update duration (%s)",
		"experience.validation.yearRangeNotChronological": "(de-de)From year (%d) must come before To year (%d)",
		"experience.warn.companyNameTruncated": "(de-de)Company length (%d) must be less than or equal to (%d) - truncating %d characters.",
		"experience.warn.descriptionTruncated": "(de-de)Description length (%d) must be less than or equal to (%d) - truncating %d characters.",
		"experience.warn.jobTitleTruncated": "(de-de)Job Title length (%d) must be less than or equal to (%d) - truncating %d characters.",
		"experience.warn.locationTruncated": "(de-de)Location length (%d) must be less than or equal to (%d) - truncating %d characters.",
		"experience.warn.monthNotInValidRange": "(de-de)%s month must be between 1 and 12",
		"experience.warn.monthNotValid": "(de-de)%s month is not valid",
		"experience.warn.yearNotInValidRange": "(de-de)%s year must be between %d and %d",
		"experience.warn.yearNotValid": "(de-de)%s year is not valid",
		"person.import.emailRequired": "(de-de)E-mail is required.",
		"person.import.firstNameRequired": "(de-de)First name is required.",
		"person.import.insufficientFields": "(de-de)Invalid person with email '%s'. Error: %v.",
		"person.import.lastNameRequired": "(de-de)Last name is required.",
		"person.import.userNameRequired": "(de-de)User name is required."
	}
}